name: Build & Release Android App

env:
  main_project_module: app

on:
  push:
    branches: [ 'release/**' ]
    tags: [ 'v*' ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set current date as env variable
      run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      
    - name: Set repository name as env variable
      run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
        cache: 'gradle'
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3
      
    - name: Decode Keystore (if available)
      if: ${{ secrets.KEYSTORE_FILE != '' }}
      env:
        ENCODED_STRING: ${{ secrets.KEYSTORE_FILE }}
      run: |
        echo $ENCODED_STRING | base64 -di > app/keystore.jks
        
    - name: Build Release AAB (with signing)
      if: ${{ secrets.KEYSTORE_FILE != '' }}
      run: ./gradlew bundleRelease
      env:
        SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
        SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
        SIGNING_STORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        
    - name: Build Release APK (with signing)
      if: ${{ secrets.KEYSTORE_FILE != '' }}
      run: ./gradlew assembleRelease
      env:
        SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
        SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
        SIGNING_STORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        
    - name: Build Release APK (unsigned)
      if: ${{ secrets.KEYSTORE_FILE == '' }}
      run: ./gradlew assembleRelease
        
    - name: Generate file name
      run: |
        VERSION_NAME=$(grep 'versionName' app/build.gradle | awk '{print $2}' | sed 's/"//g')
        BRANCH_NAME=${GITHUB_REF##*/}
        echo "OUTPUT_NAME=iOSGallery-release-${VERSION_NAME:-1.0}-${BRANCH_NAME}-${{ env.date_today }}" >> $GITHUB_ENV
        
    - name: Rename AAB (if exists)
      if: ${{ secrets.KEYSTORE_FILE != '' }}
      run: |
        if [ -f "./app/build/outputs/bundle/release/app-release.aab" ]; then
          mv "./app/build/outputs/bundle/release/app-release.aab" "./app/build/outputs/bundle/release/${{ env.OUTPUT_NAME }}.aab"
        fi
      
    - name: Rename APK
      run: |
        if [ -f "./app/build/outputs/apk/release/app-release.apk" ]; then
          mv "./app/build/outputs/apk/release/app-release.apk" "./app/build/outputs/apk/release/${{ env.OUTPUT_NAME }}.apk"
        elif [ -f "./app/build/outputs/apk/release/app-release-unsigned.apk" ]; then
          mv "./app/build/outputs/apk/release/app-release-unsigned.apk" "./app/build/outputs/apk/release/${{ env.OUTPUT_NAME }}.apk"
        fi
      
    - name: Upload AAB (if exists)
      if: ${{ secrets.KEYSTORE_FILE != '' }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.OUTPUT_NAME }}-aab
        path: app/build/outputs/bundle/release/${{ env.OUTPUT_NAME }}.aab
        if-no-files-found: ignore
        
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.OUTPUT_NAME }}-apk
        path: app/build/outputs/apk/release/${{ env.OUTPUT_NAME }}.apk
        if-no-files-found: error